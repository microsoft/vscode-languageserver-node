name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: microsoft/vscode-engineering
      ref: main
      endpoint: Monaco

parameters:
  - name: publishTypes
    displayName: ðŸš€ Publish types
    type: boolean
    default: false
  - name: publishTextDocument
    displayName: ðŸš€ Publish textDocument
    type: boolean
    default: false
  - name: publishJsonrpc
    displayName: ðŸš€ Publish jsonrpc
    type: boolean
    default: false
  - name: publishProtocol
    displayName: ðŸš€ Publish protocol
    type: boolean
    default: false
  - name: publishServer
    displayName: ðŸš€ Publish server
    type: boolean
    default: false
  - name: publishClient
    displayName: ðŸš€ Publish client
    type: boolean
    default: false

extends:
  template: azure-pipelines/npm-package/pipeline.yml@templates
  parameters:
    npmPackages:
      - name: textDocument
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/textDocument
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/textDocument
            displayName: Lint package
        testSteps:
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/textDocument
            displayName: Run tests
        publishPackage: ${{ parameters.publishTextDocument }}
        workingDirectory: $(Build.SourcesDirectory)/textDocument

      - name: types
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/types
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/types
            displayName: Lint package
        testSteps:
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/types
            displayName: Run tests
        publishPackage: ${{ parameters.publishTypes }}
        workingDirectory: $(Build.SourcesDirectory)/types

      - name: jsonrpc
        dependsOn: types
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/jsonrpc
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/jsonrpc
            displayName: Lint package
        testSteps:
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/jsonrpc
            displayName: Run tests
            env:
              DISPLAY: ':99.0'
        publishPackage: ${{ parameters.publishJsonrpc }}
        publishDependsOn: ${{ parameters.publishTypes }}
        workingDirectory: $(Build.SourcesDirectory)/jsonrpc

      - name: protocol
        dependsOn: jsonrpc
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/protocol
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/protocol
            displayName: Lint package
        testSteps:
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/protocol
            displayName: Run tests
            env:
              DISPLAY: ':99.0'
        publishDependsOn: ${{ parameters.publishJsonrpc }}
        publishPackage: ${{ parameters.publishProtocol }}
        workingDirectory: $(Build.SourcesDirectory)/protocol

      - name: server
        dependsOn: protocol
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/server
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/server
            displayName: Lint package
        testSteps:
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/server
            displayName: Run tests
        publishDependsOn: ${{ parameters.publishProtocol }}
        publishPackage: ${{ parameters.publishServer }}
        workingDirectory: $(Build.SourcesDirectory)/server

      - name: client
        dependsOn: server
        buildPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run compile
            workingDirectory: $(Build.SourcesDirectory)/client
            displayName: Compile package
          - script: npm run lint
            workingDirectory: $(Build.SourcesDirectory)/client
            displayName: Lint package
        testSteps:
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run test
            workingDirectory: $(Build.SourcesDirectory)/client
            displayName: Run tests
            env:
              DISPLAY: ':99.0'
        publishDependsOn: ${{ parameters.publishServer }}
        publishPackage: ${{ parameters.publishClient }}
        workingDirectory: $(Build.SourcesDirectory)/client
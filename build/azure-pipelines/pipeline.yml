name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: microsoft/vscode-engineering
      ref: main
      endpoint: Monaco

parameters:
  - name: quality
    displayName: Quality
    type: string
    default: latest
    values:
      - latest
      - next
  - name: publishTextDocument
    displayName: ðŸš€ Publish textDocument
    type: boolean
    default: false
  - name: publishTypes
    displayName: ðŸš€ Publish types
    type: boolean
    default: false
  - name: publishJsonrpc
    displayName: ðŸš€ Publish jsonrpc
    type: boolean
    default: false
  - name: publishProtocol
    displayName: ðŸš€ Publish protocol
    type: boolean
    default: false
  - name: publishServer
    displayName: ðŸš€ Publish server
    type: boolean
    default: false
  - name: publishClient
    displayName: ðŸš€ Publish client
    type: boolean
    default: false

extends:
  template: azure-pipelines/npm-package/pipeline.yml@templates
  parameters:
    npmPackages:
      - name: textDocument
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run all
            workingDirectory: $(Build.SourcesDirectory)/textDocument
            displayName: Verify package
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishTextDocument }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/textDocument
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/textDocument
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/textDocument

      - name: types
        dependsOn: textDocument
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run all
            workingDirectory: $(Build.SourcesDirectory)/types
            displayName: Verify package
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishTypes }}
        publishDependsOn: ${{ parameters.publishTextDocument }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/types
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/types
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/types

      - name: jsonrpc
        dependsOn: types
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run all
            workingDirectory: $(Build.SourcesDirectory)/jsonrpc
            displayName: Verify package
            env:
              DISPLAY: ':99.0'
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishJsonrpc }}
        publishDependsOn: ${{ parameters.publishTypes }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/jsonrpc
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/jsonrpc
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/jsonrpc

      - name: protocol
        dependsOn: jsonrpc
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run all
            workingDirectory: $(Build.SourcesDirectory)/protocol
            displayName: Verify package
            env:
              DISPLAY: ':99.0'
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishProtocol }}
        publishDependsOn: ${{ parameters.publishJsonrpc }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/protocol
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/protocol
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/protocol

      - name: server
        dependsOn: protocol
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - script: npm run all
            workingDirectory: $(Build.SourcesDirectory)/server
            displayName: Verify package
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishServer }}
        publishDependsOn: ${{ parameters.publishProtocol }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/server
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/server
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/server

      - name: client
        dependsOn: server
        testPlatforms:
          - name: Linux
            nodeVersions:
              - 16.14.2
          - name: MacOS
            nodeVersions:
              - 16.14.2
          - name: Windows
            nodeVersions:
              - 16.14.2
        buildSteps:
          - script: npm install
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Install dependencies
          - bash: |
              /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo ">>> Started xvfb"
            displayName: Start xvfb
            condition: eq(variables['Agent.OS'], 'Linux')
          - script: npm run all:pack
            workingDirectory: $(Build.SourcesDirectory)/client
            displayName: Verify Package
            env:
              DISPLAY: ':99.0'
        tag: ${{ parameters.quality }}
        publishPackage: ${{ parameters.publishClient }}
        publishDependsOn: ${{ parameters.publishServer }}
        postPublishSteps:
          - ${{ if eq(parameters.quality, 'latest') }}:
            - bash: |
                PACKAGE_SPEC=$(node -p "require(\"./package.json\").name + \"@\" + require(\"./package.json\").version")
                echo "##vso[task.setvariable variable=PACKAGE_SPEC;isOutput=true]$PACKAGE_SPEC"
              name: SetPackageSpec
              displayName: Set PACKAGE_SPEC variable
              workingDirectory: $(Build.SourcesDirectory)/client
            - task: Npm@1
              inputs:
                command: custom
                customCommand: dist-tag add $(SetPackageSpec.PACKAGE_SPEC) next
                customEndpoint: NPM (vscode-bot)
                workingDir: $(Build.SourcesDirectory)/client
              displayName: npm dist-tag
        workingDirectory: $(Build.SourcesDirectory)/client